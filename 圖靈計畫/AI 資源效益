def get_max_benefit(n, v, regions):
    # 计算所有边界
    xs = []
    ys = []
    for x1, y1, x2, y2 in regions:
        xs.extend([x1, x2])
        ys.extend([y1, y2])
    
    xs = sorted(set(xs))
    ys = sorted(set(ys))
    
    max_benefit = 0
    
    # 遍历所有可能的长方形
    for i in range(len(xs)):
        for j in range(i, len(xs)):
            for k in range(len(ys)):
                for l in range(k, len(ys)):
                    x1, x2 = xs[i], xs[j]
                    y1, y2 = ys[k], ys[l]
                    
                    if x1 > x2 or y1 > y2:
                        continue
                    
                    contained_regions = 0
                    for rx1, ry1, rx2, ry2 in regions:
                        if rx1 >= x1 and rx2 <= x2 and ry1 >= y1 and ry2 <= y2:
                            contained_regions += 1
                    
                    area = (x2 - x1 + 1) * (y2 - y1 + 1)
                    benefit = contained_regions * v - area
                    max_benefit = max(max_benefit, benefit)
    
    return max_benefit

# 从控制台读取输入
n, v = map(int, input().split())
regions = [tuple(map(int, input().split())) for _ in range(n)]

# 计算最大效益值
max_benefit = get_max_benefit(n, v, regions)
print(max_benefit)
